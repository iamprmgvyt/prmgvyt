{
    "files": [
        {
            "name": "index.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Your Name</title>\n    <link rel=\"stylesheet\" href=\"style.css\">\n    <script src=\"https://kit.fontawesome.com/a134cf330a.js\" crossorigin=\"anonymous\"></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap\" rel=\"stylesheet\">\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"/apple-touch-icon.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"/site.webmanifest\">\n    <link rel=\"mask-icon\" href=\"/safari-pinned-tab.svg\" color=\"#5bbad5\">\n</head>\n<body>\n    <div class=\"profile-card\">\n        <img src=\"avatar.png\" alt=\"Avatar\" class=\"avatar\">\n        <h1 class=\"name\">Your Name</h1>\n        <p class=\"bio\">Your Bio Here</p>\n        <div class=\"links-container\">\n            \n        </div>\n    </div>\n    <script src=\"script.js\"></script>\n</body>\n</html>"
        },
        {
            "name": "style.css",
            "content": "/* ======================== */\n/* 1. Global & Base Styles */\n/* ======================== */\n\nbody {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    min-height: 100vh;\n    font-family: 'Poppins', sans-serif;\n    color: #333;\n    margin: 0;\n    \n    /* Animated gradient background */\n    background: linear-gradient(135deg, #a1c4fd 0%, #c2e9fb 100%);\n    background-size: 400% 400%;\n    animation: gradient-animation 15s ease infinite;\n    overflow-x: hidden;\n}\n\n@keyframes gradient-animation {\n    0% {\n        background-position: 0% 50%;\n    }\n    50% {\n        background-position: 100% 50%;\n    }\n    100% {\n        background-position: 0% 50%;\n    }\n}\n\n/* Custom scrollbar */\n::-webkit-scrollbar {\n    width: 12px;\n}\n\n::-webkit-scrollbar-track {\n    background: #f1f1f1;\n    border-radius: 10px;\n}\n\n::-webkit-scrollbar-thumb {\n    background: #888;\n    border-radius: 10px;\n    border: 3px solid #f1f1f1;\n}\n\n::-webkit-scrollbar-thumb:hover {\n    background: #555;\n}\n\n/* ======================== */\n/* 2. Profile Card & Header */\n/* ======================== */\n\n/* Subtle floating effect for the profile card */\n@keyframes float {\n    0% {\n        transform: translateY(0px);\n    }\n    50% {\n        transform: translateY(-8px);\n    }\n    100% {\n        transform: translateY(0px);\n    }\n}\n\n.profile-card {\n    background: rgba(255, 255, 255, 0.9);\n    backdrop-filter: blur(10px);\n    border-radius: 20px;\n    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);\n    padding: 40px;\n    width: 90%;\n    max-width: 400px;\n    text-align: center;\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    animation: float 6s ease-in-out infinite;\n    position: relative;\n    box-sizing: border-box;\n}\n\n/* Adjust card width for sub-pages */\nbody:not(:has(.links-container)) .profile-card {\n    max-width: 600px;\n}\n\nbody:has(#projects-container) .profile-card {\n    max-width: 800px;\n}\n\nbody:has(#bots-container) .profile-card {\n    max-width: 700px;\n}\n\n.profile-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);\n    animation-play-state: paused;\n}\n\n.avatar {\n    width: 150px;\n    height: 150px;\n    border-radius: 50%;\n    object-fit: cover;\n    border: 5px solid #fff;\n    box-shadow: 0 0 15px rgba(0, 0, 0, 0.1);\n    transition: transform 0.3s ease;\n}\n\n.avatar:hover {\n    transform: scale(1.05) rotate(5deg);\n}\n\n.name {\n    margin: 20px 0 5px;\n    font-size: 2.5rem;\n    font-weight: 600;\n    color: #4a4a4a;\n}\n\n.bio {\n    margin: 0 0 20px;\n    color: #666;\n    font-size: 1rem;\n}\n\n/* ======================== */\n/* 3. Links & Back Button  */\n/* ======================== */\n\n.links-container {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    margin-top: 30px;\n    transition: all 0.5s ease;\n}\n\n.link-button {\n    text-decoration: none;\n    background-color: #4a90e2;\n    color: #fff;\n    padding: 15px 25px;\n    border-radius: 10px;\n    font-weight: 600;\n    font-size: 1.1rem;\n    letter-spacing: 0.5px;\n    box-shadow: 0 5px 15px rgba(74, 144, 226, 0.3);\n    transition: background-color 0.3s ease, transform 0.2s ease, box-shadow 0.3s ease;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n}\n\n.link-button:hover {\n    background-color: #3b74b8;\n    transform: translateY(-3px);\n    box-shadow: 0 8px 20px rgba(74, 144, 226, 0.4);\n}\n\n/* Space between icon and text */\n.link-button i {\n    margin-right: 8px;\n}\n\n/* Animation for the buttons as they appear */\n.hidden-button {\n    animation: fadeInSlideUp 0.5s forwards;\n}\n\n@keyframes fadeInSlideUp {\n    from {\n        opacity: 0;\n        transform: translateY(20px);\n    }\n    to {\n        opacity: 1;\n        transform: translateY(0);\n    }\n}\n\n.back-button {\n    text-decoration: none;\n    background-color: #f0f2f5;\n    color: #555;\n    padding: 10px 15px;\n    border-radius: 8px;\n    font-weight: 600;\n    font-size: 0.9rem;\n    position: absolute;\n    top: 20px;\n    left: 20px;\n    transition: background-color 0.3s ease;\n    z-index: 10;\n}\n\n.back-button:hover {\n    background-color: #e0e2e5;\n}\n\n/* ======================== */\n/* 4. Blog Post Styles     */\n/* ======================== */\n\n.blog-posts-container {\n    margin-top: 20px;\n    text-align: left;\n    width: 100%;\n}\n\n.blog-post {\n    background-color: #fff;\n    border-radius: 15px;\n    padding: 25px;\n    margin-bottom: 25px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n    transition: transform 0.3s ease;\n}\n\n.blog-post:hover {\n    transform: translateY(-5px);\n}\n\n.post-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    color: #333;\n    margin-top: 0;\n}\n\n.post-date {\n    font-size: 0.8rem;\n    color: #888;\n    margin-bottom: 15px;\n    border-bottom: 1px solid #ddd;\n    padding-bottom: 10px;\n}\n\n.post-content p {\n    font-size: 1rem;\n    line-height: 1.6;\n    color: #444;\n}\n\n/* ======================== */\n/* 5. Project Card Styles  */\n/* ======================== */\n\n#projects-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    gap: 30px;\n    margin-top: 30px;\n    width: 100%;\n}\n\n.project-card {\n    background-color: #fff;\n    border-radius: 15px;\n    padding: 25px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    text-align: left;\n}\n\n.project-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.project-image {\n    width: 100%;\n    height: 150px;\n    object-fit: cover;\n    border-radius: 10px;\n    margin-bottom: 15px;\n}\n\n.project-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0 0 10px;\n}\n\n.project-description {\n    font-size: 0.9rem;\n    color: #666;\n    line-height: 1.6;\n    margin-bottom: 15px;\n}\n\n.project-tech {\n    font-size: 0.85rem;\n    font-weight: 500;\n    color: #4a90e2;\n    margin-bottom: 15px;\n}\n\n.project-link {\n    display: inline-block;\n    background-color: #4a90e2;\n    color: #fff;\n    padding: 10px 15px;\n    border-radius: 8px;\n    text-decoration: none;\n    font-size: 0.9rem;\n    transition: background-color 0.3s ease;\n}\n\n.project-link:hover {\n    background-color: #3b74b8;\n}\n\n/* ============================ */\n/* 6. Discord Bot Card Styles  */\n/* ============================ */\n\n#bots-container {\n    display: flex;\n    flex-direction: column;\n    gap: 30px;\n    margin-top: 30px;\n    width: 100%;\n}\n\n.bot-card {\n    background-color: #fff;\n    border-radius: 15px;\n    padding: 25px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n    display: flex;\n    align-items: center;\n    gap: 20px;\n}\n\n.bot-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.bot-avatar {\n    width: 80px;\n    height: 80px;\n    border-radius: 50%;\n    object-fit: cover;\n    border: 3px solid #7289DA;\n    flex-shrink: 0;\n}\n\n.bot-details {\n    flex-grow: 1;\n}\n\n.bot-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0 0 5px;\n    color: #333;\n}\n\n.bot-description {\n    font-size: 0.9rem;\n    color: #666;\n    line-height: 1.6;\n    margin-bottom: 10px;\n}\n\n.bot-status {\n    font-size: 0.9rem;\n    font-weight: 500;\n}\n\n.bot-status .online {\n    color: #2ecc71;\n    font-weight: bold;\n}\n\n.bot-status .offline {\n    color: #e74c3c;\n    font-weight: bold;\n}\n\n.bot-links-container {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n}\n\n.bot-link {\n    display: inline-block;\n    color: #fff;\n    padding: 10px 15px;\n    border-radius: 8px;\n    text-decoration: none;\n    font-size: 0.9rem;\n    font-weight: 500;\n    transition: background-color 0.3s ease, border-color 0.3s ease, color 0.3s ease;\n    box-shadow: 0 3px 10px rgba(0,0,0,0.1);\n}\n\n.bot-link .fa-brands, .bot-link .fa-solid {\n    margin-right: 8px;\n}\n\n/* Primary \"Invite\" Button */\n.invite-button {\n    background-color: #7289DA;\n}\n\n.invite-button:hover {\n    background-color: #5b6eae;\n}\n\n/* Secondary \"Website\" Button */\n.website-button {\n    background-color: transparent;\n    border: 2px solid #ddd;\n    color: #555;\n    box-shadow: none;\n}\n\n.website-button:hover {\n    background-color: #f0f2f5;\n    border-color: #c2c2c2;\n    color: #333;\n}\n\n/* ============================ */\n/* 7. API Key Styles      */\n/* ============================ */\n\n#api-keys-container {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    margin-top: 30px;\n    width: 100%;\n}\n\n.api-key-card {\n    background-color: #fff;\n    border-radius: 15px;\n    padding: 25px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);\n    transition: transform 0.3s ease, box-shadow 0.3s ease;\n}\n\n.api-key-card:hover {\n    transform: translateY(-5px);\n    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);\n}\n\n.key-title {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0 0 5px;\n    color: #333;\n}\n\n.key-description {\n    font-size: 0.9rem;\n    color: #666;\n    line-height: 1.6;\n    margin-bottom: 15px;\n}\n\n.key-container {\n    background-color: #f0f2f5;\n    border-radius: 8px;\n    padding: 10px 15px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    overflow-x: auto;\n}\n\n.key-text {\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 0.9rem;\n    color: #555;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.copy-button {\n    background-color: #4a90e2;\n    color: #fff;\n    border: none;\n    padding: 8px 12px;\n    border-radius: 6px;\n    font-size: 0.9rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background-color 0.3s ease;\n    flex-shrink: 0;\n}\n\n.copy-button:hover {\n    background-color: #3b74b8;\n}\n\n.copy-button:disabled {\n    background-color: #2ecc71;\n    cursor: not-allowed;\n}\n\n.copy-button .fa-solid {\n    margin-right: 5px;\n}\n\n/* ============================ */\n/* 8. Media Queries for Mobile */\n/* ============================ */\n\n@media (max-width: 600px) {\n    .profile-card {\n        padding: 30px 20px;\n    }\n\n    .name {\n        font-size: 2rem;\n    }\n\n    .link-button {\n        padding: 12px 20px;\n        font-size: 1rem;\n    }\n\n    .api-key-card {\n        padding: 20px;\n    }\n\n    .key-container {\n        flex-direction: column;\n        align-items: flex-start;\n    }\n\n    .copy-button {\n        width: 100%;\n        margin-top: 10px;\n    }\n}"
        },
        {
            "name": "buttons.json",
            "content": "{\n    \"buttons\": [\n        {\n            \"name\": \"Discord\",\n            \"url\": \"https://discord.com/invite/your-discord-invite\",\n            \"icon\": \"fa-brands fa-discord\"\n        },\n        {\n            \"name\": \"Github\",\n            \"url\": \"https://github.com/your-github-username\",\n            \"icon\": \"fa-brands fa-github\"\n        },\n        {\n            \"name\": \"View Source\",\n            \"url\": \"./viewsource/viewsource.html\",\n            \"icon\": \"fa-solid fa-code\" \n        }\n    ]\n}"
        },
        {
            "name": "script.js",
            "content": "document.addEventListener('DOMContentLoaded', function() {\n    fetch('buttons.json')\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to load buttons.json');\n            }\n            return response.json();\n        })\n        .then(data => {\n            const linksContainer = document.querySelector('.links-container');\n            const visibleButtonsLimit = 4;\n            const buttons = data.buttons || [];\n\n            if (buttons.length > visibleButtonsLimit) {\n                // Mảng để lưu trữ các nút ẩn\n                const hiddenButtonsArray = [];\n\n                // Hiển thị các nút ban đầu\n                buttons.slice(0, visibleButtonsLimit).forEach(buttonData => {\n                    linksContainer.appendChild(createButton(buttonData));\n                });\n\n                // Tạo các nút ẩn và lưu vào mảng\n                buttons.slice(visibleButtonsLimit).forEach(buttonData => {\n                    const button = createButton(buttonData);\n                    button.classList.add('hidden-button');\n                    hiddenButtonsArray.push(button);\n                });\n\n                // Thêm nút Show More vào cuối danh sách ban đầu\n                const showMoreButton = document.createElement('a');\n                showMoreButton.href = '#';\n                showMoreButton.classList.add('link-button');\n                showMoreButton.innerHTML = 'Show More <i class=\"fa-solid fa-chevron-down\"></i>';\n                linksContainer.appendChild(showMoreButton);\n\n                // Xử lý sự kiện khi nhấp vào nút Show More\n                showMoreButton.addEventListener('click', function(event) {\n                    event.preventDefault();\n                    \n                    // Nếu đang ở trạng thái Show Less (đã mở rộng)\n                    if (linksContainer.classList.contains('expanded')) {\n                            // Thu gọn danh sách\n                        linksContainer.classList.remove('expanded');\n                        showMoreButton.innerHTML = 'Show Less <i class=\"fa-solid fa-chevron-down\"></i>';\n                        // Loại bỏ các nút ẩn ra khỏi DOM\n                        const buttonsToRemove = linksContainer.querySelectorAll('.hidden-button');\n                        buttonsToRemove.forEach(button => linksContainer.removeChild(button));\n                    } else {\n                        // Mở rộng danh sách\n                        linksContainer.classList.add('expanded');\n                        showMoreButton.innerHTML = 'Show Less <i class=\"fa-solid fa-chevron-up\"></i>';\n                        \n                        // Chèn từng nút từ mảng vào trước nút Show More\n                        hiddenButtonsArray.forEach(button => {\n                            linksContainer.insertBefore(button, showMoreButton);\n                        });\n                        \n                        // Cuộn trang xuống nút sau khi mở rộng\n                        setTimeout(() => {\n                            showMoreButton.scrollIntoView({ behavior: 'smooth', block: 'end' });\n                        }, 100);\n                    }\n                });\n            } else {\n                // Hiển thị tất cả các nút nếu số lượng nhỏ hơn giới hạn\n                buttons.forEach(buttonData => {\n                    linksContainer.appendChild(createButton(buttonData));\n                });\n            }\n        })\n        .catch(error => {\n            console.error('Error fetching or processing data:', error);\n            const linksContainer = document.querySelector('.links-container');\n            linksContainer.innerHTML = '<p style=\"color:red;\">Could not load buttons. Please check the file.</p>';\n        });\n});\n\nfunction createButton(buttonData) {\n    const button = document.createElement('a');\n    button.href = buttonData.url;\n    button.classList.add('link-button');\n    button.target = '_blank';\n    button.innerHTML = `<i class=\"${buttonData.icon}\"></i> ${buttonData.name}`;\n    return button;\n}"
        },
        {
            "name": "viewsource.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>View Source</title>\n    \n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../favicons/apple-touch-icon.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../favicons/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../favicons/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"../favicons/site.webmanifest\">\n    <link rel=\"mask-icon\" href=\"../favicons/safari-pinned-tab.svg\" color=\"#5bbad5\">\n    <meta name=\"msapplication-TileColor\" content=\"#da532c\">\n    <meta name=\"theme-color\" content=\"#ffffff\">\n    <link rel=\"shortcut icon\" href=\"../favicons/favicon.ico\">\n    \n    <link rel=\"stylesheet\" href=\"../style.css\">\n    <script src=\"https://kit.fontawesome.com/a134cf330a.js\" crossorigin=\"anonymous\"></script>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap\" rel=\"stylesheet\">\n    <script src=\"viewsource-script.js\"></script>\n</head>\n<body>\n    <div class=\"profile-card\">\n        <a href=\"../index.html\" class=\"back-button\"><i class=\"fa-solid fa-arrow-left\"></i> Back</a>\n        <h2 class=\"name\">Website Source Code</h2>\n        <div class=\"file-buttons-container\">\n            </div>\n        <div class=\"code-viewer-container\">\n            </div>\n    </div>\n</body>\n</html>"
        },
        {
            "name": "viewsource-script.js",
            "content": "document.addEventListener('DOMContentLoaded', function() {\n    const codeViewerContainer = document.querySelector('.code-viewer-container');\n\n    // CSS styling\n    const cssContent = `\n.code-viewer-container {\n    text-align: left;\n    margin-top: 20px;\n    width: 100%;\n}\n\n.code-block {\n    background-color: #2b2b2b;\n    border-radius: 10px;\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);\n    margin-bottom: 20px;\n    padding: 20px;\n    overflow-x: auto;\n    transition: transform 0.3s ease;\n}\n\n.code-block:hover {\n    transform: translateY(-5px);\n}\n\n.code-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 15px;\n    border-bottom: 1px solid #444;\n    padding-bottom: 10px;\n}\n\n.file-name {\n    color: #f0f0f0;\n    font-family: 'Poppins', sans-serif;\n    font-size: 1.2rem;\n    font-weight: 600;\n    margin: 0;\n}\n\n.copy-button {\n    background-color: #569cd6;\n    color: #fff;\n    border: none;\n    border-radius: 6px;\n    padding: 8px 12px;\n    font-size: 0.9rem;\n    cursor: pointer;\n    transition: background-color 0.3s ease, transform 0.2s ease;\n}\n\n.copy-button:hover {\n    background-color: #4a8ac1;\n    transform: translateY(-2px);\n}\n\n.copy-button.copied {\n    background-color: #2ecc71;\n}\n\npre {\n    margin: 0;\n    padding: 0;\n}\n\ncode {\n    display: block;\n    font-family: 'Courier New', Courier, monospace;\n    font-size: 0.9rem;\n    line-height: 1.5;\n    white-space: pre-wrap;\n    word-break: break-all;\n    color: #f0f0f0;\n}\n\n/* Tùy chỉnh màu sắc cho cú pháp highlight (tương tự như VS Code) */\n.language-html .hljs-tag,\n.language-html .hljs-name {\n    color: #569cd6;\n}\n.language-html .hljs-attr,\n.language-html .hljs-string {\n    color: #9cd67a;\n}\n.language-css .hljs-selector-tag,\n.language-css .hljs-attribute {\n    color: #c586c0;\n}\n.language-css .hljs-property {\n    color: #d7ba7d;\n}\n.language-css .hljs-value {\n    color: #9cd67a;\n}\n.language-js .hljs-keyword {\n    color: #c586c0;\n}\n.language-js .hljs-title,\n.language-js .hljs-built_in {\n    color: #569cd6;\n}\n.language-js .hljs-string {\n    color: #9cd67a;\n}\n.language-json .hljs-attr {\n    color: #569cd6;\n}\n.language-json .hljs-string {\n    color: #9cd67a;\n}\n    `;\n\n    // Inject CSS into the document's head\n    const styleSheet = document.createElement('style');\n    styleSheet.type = 'text/css';\n    styleSheet.innerText = cssContent;\n    document.head.appendChild(styleSheet);\n\n    // Hàm để tải và hiển thị nội dung tệp\n    async function loadFileContent() {\n        try {\n            const response = await fetch('viewsource.json');\n            if (!response.ok) {\n                throw new Error('Failed to load viewsource.json');\n            }\n            const data = await response.json();\n            \n            for (const file of data.files) {\n                // Tạo một khối để hiển thị mã nguồn\n                const codeBlock = document.createElement('div');\n                codeBlock.classList.add('code-block');\n                \n                // Tiêu đề tệp và nút copy\n                const header = document.createElement('div');\n                header.classList.add('code-header');\n                \n                const fileName = document.createElement('h3');\n                fileName.classList.add('file-name');\n                fileName.textContent = file.name;\n                \n                const copyButton = document.createElement('button');\n                copyButton.classList.add('copy-button');\n                copyButton.innerHTML = '<i class=\"fa-regular fa-copy\"></i> Copy Code';\n\n                // Thêm sự kiện copy vào nút\n                copyButton.addEventListener('click', async () => {\n                    try {\n                        await navigator.clipboard.writeText(file.content);\n                        copyButton.innerHTML = '<i class=\"fa-solid fa-check\"></i> Copied!';\n                        copyButton.classList.add('copied');\n                        setTimeout(() => {\n                            copyButton.innerHTML = '<i class=\"fa-regular fa-copy\"></i> Copy Code';\n                            copyButton.classList.remove('copied');\n                        }, 2000);\n                    } catch (err) {\n                        console.error('Failed to copy text: ', err);\n                        copyButton.innerHTML = '<i class=\"fa-solid fa-xmark\"></i> Failed!';\n                    }\n                });\n\n                header.appendChild(fileName);\n                header.appendChild(copyButton);\n                \n                // Phần hiển thị code\n                const preElement = document.createElement('pre');\n                const codeElement = document.createElement('code');\n                \n                // Thêm class cho cú pháp highlight\n                if (file.name.endsWith('.html')) {\n                    codeElement.classList.add('language-html');\n                } else if (file.name.endsWith('.css')) {\n                    codeElement.classList.add('language-css');\n                } else if (file.name.endsWith('.js')) {\n                    codeElement.classList.add('language-js');\n                } else if (file.name.endsWith('.json')) {\n                    codeElement.classList.add('language-json');\n                }\n                \n                // Chuyển đổi các ký tự đặc biệt để hiển thị đúng trong HTML\n                codeElement.textContent = file.content;\n\n                preElement.appendChild(codeElement);\n                codeBlock.appendChild(header);\n                codeBlock.appendChild(preElement);\n                codeViewerContainer.appendChild(codeBlock);\n            }\n        } catch (error) {\n            console.error('Error loading files:', error);\n            codeViewerContainer.innerHTML = '<p style=\"color:red; text-align: center;\">Could not load source files. Please check file paths.</p>';\n        }\n    }\n    \n    loadFileContent();\n});"
        },
        {
            "name": "apikey.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>API Keys 🔑</title>\n\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../favicons/apple-touch-icon.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../favicons/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../favicons/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"../favicons/site.webmanifest\">\n    <link rel=\"mask-icon\" href=\"../favicons/safari-pinned-tab.svg\" color=\"#5bbad5\">\n    <meta name=\"msapplication-TileColor\" content=\"#da532c\">\n    <meta name=\"theme-color\" content=\"#ffffff\">\n    <link rel=\"shortcut icon\" href=\"../favicons/favicon.ico\">\n\n    <link rel=\"stylesheet\" href=\"../style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"profile-card\">\n        <a href=\"../index.html\" class=\"back-button\">\n            <i class=\"fa-solid fa-arrow-left\"></i> Back\n        </a>\n        <h1 class=\"name\">My API Keys</h1>\n        <p class=\"bio\">A list of my most used API keys for quick access.</p>\n       \n        <div id=\"api-keys-container\"></div>\n       \n        <p style=\"font-size: 0.8rem; color: #888; margin-top: 20px;\">\n            These are free API keys and may be rate-limited.\n        </p>\n       \n    </div>\n    <script src=\"apikey-script.js\"></script>\n</body>\n</html>"
        },
        {
            "name": "apikey-script.js",
            "content": "document.addEventListener('DOMContentLoaded', function() {\n    fetch('apikey.json')\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to load apikey.json');\n            }\n            return response.json();\n           })\n           .then(data => {\n               const container = document.getElementById('api-keys-container');\n\n               if (data.apikeys && Array.isArray(data.apikeys)) {\n                   data.apikeys.forEach(apiKeyData => {\n                       const keyCard = document.createElement('div');\n                       keyCard.classList.add('api-key-card');\n\n                       const title = document.createElement('h3');\n                       title.classList.add('key-title');\n                       title.textContent = apiKeyData.name;\n\n                       const description = document.createElement('p');\n                       description.classList.add('key-description');\n                       description.textContent = apiKeyData.description;\n\n                       const keyContainer = document.createElement('div');\n                       keyContainer.classList.add('key-container');\n\n                       const keyText = document.createElement('span');\n                       keyText.classList.add('key-text');\n                       keyText.textContent = apiKeyData.key;\n                       keyContainer.appendChild(keyText);\n\n                       const copyButton = document.createElement('button');\n                       copyButton.classList.add('copy-button');\n                       copyButton.innerHTML = `<i class=\"fa-solid fa-copy\"></i> Copy Key`;\n                       \n                       // Add copy functionality to the button\n                       copyButton.addEventListener('click', () => {\n                           navigator.clipboard.writeText(apiKeyData.key).then(() => {\n                               copyButton.textContent = 'Copied!';\n                               copyButton.disabled = true;\n                               setTimeout(() => {\n                                   copyButton.innerHTML = `<i class=\"fa-solid fa-copy\"></i> Copy Key`;\n                                   copyButton.disabled = false;\n                               }, 2000);\n                           }).catch(err => {\n                               console.error('Could not copy text: ', err);\n                               alert('Failed to copy key. Your browser might not support this feature on a local file.');\n                           });\n                       });\n\n                       keyContainer.appendChild(copyButton);\n\n                       keyCard.appendChild(title);\n                       keyCard.appendChild(description);\n                       keyCard.appendChild(keyContainer);\n                       \n                       container.appendChild(keyCard);\n                   });\n               } else {\n                   container.innerHTML = '<p>No API keys found.</p>';\n               }\n           })\n           .catch(error => {\n               console.error('Error fetching or rendering API keys:', error);\n               const container = document.getElementById('api-keys-container');\n               container.innerHTML = '<p style=\"color:red;\">Could not load API keys. Please check the file.</p>';\n           });\n});"
        },
        {
            "name": "apikey.json",
            "content": "{\n    \"apikeys\": [\n        {\n            \"name\": \"OpenAI API Key\",\n            \"description\": \"Used for AI models and language processing.\",\n            \"key\": \"Soon!\"\n           },\n           {\n               \"name\": \"GitHub API Key\",\n               \"description\": \"Used to interact with the GitHub API for project management and automation.\",\n               \"key\": \"Soon!\"\n           },\n           {\n               \"name\": \"Google Maps API Key\",\n               \"description\": \"Provides access to Google Maps services, including maps, routes, and geocoding.\",\n               \"key\": \"Soon!\"\n           }\n    ]\n}"
        },
        {
            "name": "blog.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My Blog</title>\n\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../favicons/apple-touch-icon.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../favicons/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../favicons/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"../favicons/site.webmanifest\">\n    <link rel=\"mask-icon\" href=\"../favicons/safari-pinned-tab.svg\" color=\"#5bbad5\">\n    <meta name=\"msapplication-TileColor\" content=\"#da532c\">\n    <meta name=\"theme-color\" content=\"#ffffff\">\n    <link rel=\"shortcut icon\" href=\"../favicons/favicon.ico\">\n\n    <link rel=\"stylesheet\" href=\"../style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"profile-card\">\n        <a href=\"../index.html\" class=\"back-button\">\n            <i class=\"fa-solid fa-arrow-left\"></i> Back\n        </a>\n        <h1 class=\"name\">My Blog</h1>\n        <p class=\"bio\">My latest thoughts, tutorials, and project updates.</p>\n        \n        <div id=\"blog-posts-container\"></div>\n    </div>\n    <script src=\"blog-script.js\"></script>\n</body>\n</html>"
        },
        {
            "name": "blog.json",
            "content": "{\n    \"posts\": [\n        {\n            \"title\": \"A Guide to Building Your Own Linktree Clone\",\n            \"date\": \"August 20, 2025\",\n            \"content\": \"Building a simple Linktree clone is a great way to practice your HTML, CSS, and JavaScript skills. This project focuses on a clean, responsive design and dynamic content loading from a JSON file. The key is to separate your data from the presentation logic, making it easy to update your links without touching the HTML file. We'll use a fetch API call in JavaScript to read the data and a simple loop to generate the link buttons. For styling, a modern, floating card effect with a gradient background gives it a professional look. Remember to use a CSS preprocessor like Sass for better organization on larger projects!\"\n        },\n        {\n            \"title\": \"Understanding JavaScript Async/Await\",\n            \"date\": \"August 15, 2025\",\n            \"content\": \"Asynchronous operations are a cornerstone of modern web development. Before async/await, we relied on callbacks and Promises, which could lead to 'callback hell' and complex code. The introduction of async/await has made asynchronous code look and behave like synchronous code, significantly improving readability and maintainability. In this post, we'll explore the 'async' keyword to declare an asynchronous function and the 'await' keyword to pause execution until a Promise is settled. We'll also cover best practices for error handling using try-catch blocks.\"\n        },\n        {\n            \"title\": \"Top 5 VS Code Extensions for Web Developers\",\n            \"date\": \"August 10, 2025\",\n            \"content\": \"Visual Studio Code is my go-to code editor, and these five extensions have boosted my productivity immensely: Live Server for a real-time development server, Prettier for code formatting, ES7+ React/Redux/GraphQL/JS snippets for quick code generation, GitLens for understanding code history, and CSS Peek to quickly jump to CSS definitions. These tools are essential for streamlining your workflow and maintaining clean, consistent code across your projects. Don't forget to customize your settings to match your personal preferences!\"\n        }\n    ]\n}"
        },
        {
            "name": "blog-script.js",
            "content": "document.addEventListener('DOMContentLoaded', function() {\n    fetch('blog.json')\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to load blog.json');\n            }\n            return response.json();\n        })\n        .then(data => {\n            const container = document.getElementById('blog-posts-container');\n            \n            if (data.posts && Array.isArray(data.posts)) {\n                data.posts.forEach(postData => {\n                    const postElement = document.createElement('div');\n                    postElement.classList.add('blog-post');\n\n                    const title = document.createElement('h3');\n                    title.classList.add('post-title');\n                    title.textContent = postData.title;\n\n                    const date = document.createElement('p');\n                    date.classList.add('post-date');\n                    date.textContent = postData.date;\n\n                    const content = document.createElement('div');\n                    content.classList.add('post-content');\n                    const paragraph = document.createElement('p');\n                    paragraph.textContent = postData.content;\n                    content.appendChild(paragraph);\n\n                    postElement.appendChild(title);\n                    postElement.appendChild(date);\n                    postElement.appendChild(content);\n\n                    container.appendChild(postElement);\n                });\n            } else {\n                container.innerHTML = '<p>No blog posts found.</p>';\n            }\n        })\n        .catch(error => {\n            console.error('Error fetching or rendering blog posts:', error);\n            const container = document.getElementById('blog-posts-container');\n            container.innerHTML = '<p style=\"color:red;\">Could not load blog posts. Please check the file.</p>';\n        });\n});"
        },
        {
            "name": "mydiscordbot.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My Discord Bots 🤖</title>\n\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../favicons/apple-touch-icon.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../favicons/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../favicons/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"../favicons/site.webmanifest\">\n    <link rel=\"mask-icon\" href=\"../favicons/safari-pinned-tab.svg\" color=\"#5bbad5\">\n    <meta name=\"msapplication-TileColor\" content=\"#da532c\">\n    <meta name=\"theme-color\" content=\"#ffffff\">\n    <link rel=\"shortcut icon\" href=\"../favicons/favicon.ico\">\n\n    <link rel=\"stylesheet\" href=\"../style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"profile-card\">\n        <a href=\"../index.html\" class=\"back-button\">\n            <i class=\"fa-solid fa-arrow-left\"></i> Back\n        </a>\n        <h1 class=\"name\">My Discord Bots</h1>\n        <p class=\"bio\">Check out my Discord bots and their status.</p>\n        \n        <div id=\"bots-container\"></div>\n    </div>\n    <script src=\"mydiscordbot-script.js\"></script>\n</body>\n</html>"
        },
        {
            "name": "mydiscordbot.json",
            "content": "{\n    \"bots\": [\n        {\n            \"name\": \"My Bot 1\",\n            \"description\": \"A multipurpose bot for managing your server, playing music, and more.\",\n            \"avatar\": \"bot1-avatar.png\",\n            \"status\": \"online\",\n            \"invite_url\": \"https://discord.com/api/oauth2/authorize?client_id=YOUR_CLIENT_ID&permissions=8&scope=bot\",\n            \"website_url\": \"https://your-bot-website.com\"\n        },\n        {\n            \"name\": \"My Bot 2\",\n            \"description\": \"A moderation bot with advanced logging and anti-spam features.\",\n            \"avatar\": \"bot2-avatar.png\",\n            \"status\": \"offline\",\n            \"invite_url\": \"https://discord.com/api/oauth2/authorize?client_id=YOUR_CLIENT_ID&permissions=8&scope=bot\",\n            \"website_url\": \"https://your-bot-website-2.com\"\n        }\n    ]\n}"
        },
        {
            "name": "mydiscordbot-script.js",
            "content": "document.addEventListener('DOMContentLoaded', function() {\n    fetch('mydiscordbot.json')\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to load mydiscordbot.json');\n            }\n            return response.json();\n        })\n        .then(data => {\n            const container = document.getElementById('bots-container');\n            \n            if (data.bots && Array.isArray(data.bots)) {\n                data.bots.forEach(botData => {\n                    const botCard = document.createElement('div');\n                    botCard.classList.add('bot-card');\n\n                    const avatar = document.createElement('img');\n                    avatar.classList.add('bot-avatar');\n                    avatar.src = botData.avatar;\n                    avatar.alt = botData.name + ' avatar';\n\n                    const botDetails = document.createElement('div');\n                    botDetails.classList.add('bot-details');\n\n                    const title = document.createElement('h3');\n                    title.classList.add('bot-title');\n                    title.textContent = botData.name;\n\n                    const description = document.createElement('p');\n                    description.classList.add('bot-description');\n                    description.textContent = botData.description;\n\n                    const status = document.createElement('p');\n                    status.classList.add('bot-status');\n                    status.innerHTML = `Status: <span class=\"${botData.status}\">${botData.status.charAt(0).toUpperCase() + botData.status.slice(1)}</span>`;\n\n                    const linksContainer = document.createElement('div');\n                    linksContainer.classList.add('bot-links-container');\n\n                    if (botData.invite_url) {\n                        const inviteLink = document.createElement('a');\n                        inviteLink.classList.add('bot-link', 'invite-button');\n                        inviteLink.href = botData.invite_url;\n                        inviteLink.target = '_blank';\n                        inviteLink.innerHTML = '<i class=\"fa-brands fa-discord\"></i> Invite';\n                        linksContainer.appendChild(inviteLink);\n                    }\n\n                    if (botData.website_url) {\n                        const websiteLink = document.createElement('a');\n                        websiteLink.classList.add('bot-link', 'website-button');\n                        websiteLink.href = botData.website_url;\n                        websiteLink.target = '_blank';\n                        websiteLink.innerHTML = '<i class=\"fa-solid fa-link\"></i> Website';\n                        linksContainer.appendChild(websiteLink);\n                    }\n\n                    botDetails.appendChild(title);\n                    botDetails.appendChild(description);\n                    botDetails.appendChild(status);\n                    botDetails.appendChild(linksContainer);\n\n                    botCard.appendChild(avatar);\n                    botCard.appendChild(botDetails);\n\n                    container.appendChild(botCard);\n                });\n            } else {\n                container.innerHTML = '<p>No Discord bots found.</p>';\n            }\n        })\n        .catch(error => {\n            console.error('Error fetching or rendering Discord bots:', error);\n            const container = document.getElementById('bots-container');\n            container.innerHTML = '<p style=\"color:red;\">Could not load Discord bots. Please check the file.</p>';\n        });\n});"
        },
         {
            "name": "myprojects.html",
            "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>My Projects 🛠️</title>\n\n    <link rel=\"apple-touch-icon\" sizes=\"180x180\" href=\"../favicons/apple-touch-icon.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href=\"../favicons/favicon-32x32.png\">\n    <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href=\"../favicons/favicon-16x16.png\">\n    <link rel=\"manifest\" href=\"../favicons/site.webmanifest\">\n    <link rel=\"mask-icon\" href=\"../favicons/safari-pinned-tab.svg\" color=\"#5bbad5\">\n    <meta name=\"msapplication-TileColor\" content=\"#da532c\">\n    <meta name=\"theme-color\" content=\"#ffffff\">\n    <link rel=\"shortcut icon\" href=\"../favicons/favicon.ico\">\n\n    <link rel=\"stylesheet\" href=\"../style.css\">\n    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap\" rel=\"stylesheet\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css\">\n</head>\n<body>\n    <div class=\"profile-card\">\n        <a href=\"../index.html\" class=\"back-button\">\n            <i class=\"fa-solid fa-arrow-left\"></i> Back\n        </a>\n        <h1 class=\"name\">My Projects</h1>\n        <p class=\"bio\">Here are some of the personal projects I've built.</p>\n        \n        <div id=\"projects-container\"></div>\n        \n    </div>\n    <script src=\"projects-script.js\"></script>\n</body>\n</html>"
        },
        {
            "name": "projects-script.js",
            "content": "document.addEventListener('DOMContentLoaded', function() {\n    fetch('projects.json')\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Failed to load projects.json');\n            }\n            return response.json();\n        })\n        .then(data => {\n            const container = document.getElementById('projects-container');\n\n            if (data.projects && Array.isArray(data.projects)) {\n                data.projects.forEach(project => {\n                    const projectDiv = document.createElement('div');\n                    projectDiv.classList.add('project-card');\n\n                    if (project.image) {\n                        const projectImage = document.createElement('img');\n                        projectImage.src = project.image;\n                        projectImage.alt = project.name;\n                        projectImage.classList.add('project-image');\n                        projectDiv.appendChild(projectImage);\n                    }\n\n                    const title = document.createElement('h3');\n                    title.classList.add('project-title');\n                    title.textContent = project.name;\n                    projectDiv.appendChild(title);\n\n                    const description = document.createElement('p');\n                    description.classList.add('project-description');\n                    description.textContent = project.description;\n                    projectDiv.appendChild(description);\n\n                    const techList = document.createElement('p');\n                    techList.classList.add('project-tech');\n                    techList.textContent = `Technologies: ${project.tech.join(', ')}`;\n                    projectDiv.appendChild(techList);\n\n                    if (project.url) {\n                        const link = document.createElement('a');\n                        link.href = project.url;\n                        link.target = '_blank';\n                        link.classList.add('project-link');\n                        link.innerHTML = `<i class=\"fa-solid fa-code\"></i> View Code`;\n                        projectDiv.appendChild(link);\n                    }\n                    \n                    container.appendChild(projectDiv);\n                });\n            } else {\n                container.innerHTML = '<p>No projects found.</p>';\n            }\n        })\n        .catch(error => {\n            console.error('Error fetching or rendering projects:', error);\n            const container = document.getElementById('projects-container');\n            container.innerHTML = '<p style=\"color:red;\">Could not load projects. Please check the file.</p>';\n        });\n});"
        },
        {
            "name": "projects.json",
            "content": "{\n    \"projects\": [\n        {\n            \"name\": \"Web Profile\",\n            \"description\": \"A simple, modern web profile with a gradient background and dynamic buttons for social media and other pages.\",\n            \"tech\": [\"HTML\", \"CSS\", \"JavaScript\"],\n            \"url\": \"https://github.com/iamprmgvyt/prmgvyt\",\n            \"image\": \"\"\n        },\n        {\n            \"name\": \"All In One(Node.JS)\",\n            \"description\": \"A All In One Bot Code with 50+ commands for your Discord bot!\",\n            \"tech\": [\"JavaScript\"],\n            \"url\": \"https://github.com/iamprmgvyt/All-In-One\",\n            \"image\": \"\"\n        }\n    ]\n}"
        }
    ]
}
    